{"ast":null,"code":"var _jsxFileName = \"/home/ishan/project/TaskManager/Task manager/src/components/Dashboard-main/todayTask.js\";\nimport React, { useContext, useState } from 'react';\nimport { Ellipsis } from '../../assets/index';\nimport { GlobalContext } from '../../Context/GlobalState';\nimport { v4 as uuid } from 'uuid';\nimport { TaskIncomplete } from './taskIncomplete';\nimport { TaskComplete } from './taskComplete';\nexport const TodayTask = () => {\n  const [content, setContent] = useState('');\n  const {\n    task,\n    addTask\n  } = useContext(GlobalContext);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newTask = {\n      id: uuid(),\n      content,\n      completion: false\n    };\n    addTask(newTask);\n  };\n\n  const onChange = e => {\n    setContent(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"today-task-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Today's Tasks\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: Ellipsis,\n    alt: \"\",\n    width: \"6px\",\n    height: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"today-task-complete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, task.length > 0 ? task.map(task => {\n    if (task.completion === true) {\n      return /*#__PURE__*/React.createElement(TaskComplete, {\n        key: task.id,\n        task: task,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }\n      });\n    }\n\n    return null;\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }\n  }, \"No task today\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"today-task-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, task.length > 0 ? task.map(task => {\n    if (task.completion === false) {\n      return /*#__PURE__*/React.createElement(TaskIncomplete, {\n        key: task.id,\n        task: task,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }\n      });\n    }\n\n    return null;\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 24\n    }\n  }, \"No task today\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"today-task-add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: content,\n    onChange: onChange,\n    placeholder: \"+ Add a new task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n};","map":{"version":3,"sources":["/home/ishan/project/TaskManager/Task manager/src/components/Dashboard-main/todayTask.js"],"names":["React","useContext","useState","Ellipsis","GlobalContext","v4","uuid","TaskIncomplete","TaskComplete","TodayTask","content","setContent","task","addTask","onSubmit","e","preventDefault","newTask","id","completion","onChange","target","value","length","map"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Ellipsis } from '../../assets/index';\nimport { GlobalContext } from '../../Context/GlobalState';\nimport { v4 as uuid } from 'uuid';\nimport { TaskIncomplete } from './taskIncomplete';\nimport { TaskComplete } from './taskComplete';\n\nexport const TodayTask = () => {\n    const [content, setContent] = useState('');\n    const { task, addTask } = useContext(GlobalContext);\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const newTask = {\n            id: uuid(),\n            content,\n            completion: false\n        }\n        addTask(newTask);\n    }\n    const onChange = (e) => {\n        setContent(e.target.value);\n    }\n    return (\n        <div>\n            <div className='today-task-header'>\n                <h3>Today's Tasks</h3>\n                <img src={Ellipsis} alt=\"\" width='6px' height='24px' />\n            </div>\n            <div className='today-task-complete'>\n                {task.length > 0 ? (task.map(task => {\n                    if (task.completion === true) {\n                        return (\n                            <TaskComplete key={task.id} task={task}/>\n                        )\n                    }\n                    return null;\n                })) : <p>No task today</p>}\n            </div>\n            <div className='today-task-list'>\n                {task.length > 0 ? (task.map(task => {\n                    if (task.completion === false) {\n                        return (\n                            <TaskIncomplete key={task.id} task={task} />\n                        )\n                    }\n                    return null;\n                })) : (<p>No task today</p>)}\n            </div>\n            <div className=\"today-task-add\">\n                <form onSubmit={onSubmit}>\n                    <input type=\"text\" value={content} onChange={onChange} placeholder=\"+ Add a new task\" />\n                    <button type=\"submit\">Submit</button>\n                </form>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}