{"ast":null,"code":"var _jsxFileName = \"/home/ishan/project/TaskManager/Task manager/src/components/Dashboard-main/todayTask.js\";\nimport React, { useContext } from 'react';\nimport { Ellipsis } from '../../assets/index';\nimport { GlobalContext } from '../../Context/GlobalState';\nexport const TodayTask = () => {\n  const {\n    task\n  } = useContext(GlobalContext);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"today-task-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  }, \"Today's Tasks\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: Ellipsis,\n    alt: \"\",\n    width: \"6px\",\n    height: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  })), task.length > 0 ? task.map(task => {\n    if (task.completion === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"today-task-complete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }\n      }, task.content), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 54\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"today-task-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }\n      }, task.content), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 58\n        }\n      }));\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"No task today\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"today-task-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, task.length > 0 ? task.map(task => {\n    if (task.completion === false) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }\n      }, task.content), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 54\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, \"No task left\");\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"No task today\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"today-task-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"+ Add a new task\")));\n};","map":{"version":3,"sources":["/home/ishan/project/TaskManager/Task manager/src/components/Dashboard-main/todayTask.js"],"names":["React","useContext","Ellipsis","GlobalContext","TodayTask","task","length","map","completion","content"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAAQC,aAAR,QAA4B,2BAA5B;AAEA,OAAO,MAAMC,SAAS,GAAC,MAAI;AACvB,QAAM;AAACC,IAAAA;AAAD,MAASJ,UAAU,CAACE,aAAD,CAAzB;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAK,IAAA,GAAG,EAAED,QAAV;AAAoB,IAAA,GAAG,EAAC,EAAxB;AAA2B,IAAA,KAAK,EAAC,KAAjC;AAAuC,IAAA,MAAM,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAMKG,IAAI,CAACC,MAAL,GAAc,CAAd,GAAmBD,IAAI,CAACE,GAAL,CAASF,IAAI,IAAG;AAChC,QAAIA,IAAI,CAACG,UAAL,KAAoB,IAAxB,EAA6B;AACzB,0BACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQH,IAAI,CAACI,OAAb,CAFA,eAE6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAF7B,CADJ;AAMH,KAPD,MAQI;AACA,0BACQ;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQJ,IAAI,CAACI,OAAb,CAFA,eAE6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAF7B,CADR;AAMH;AACJ,GAjBmB,CAAnB,gBAiBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAvBR,eAuCI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCJ,IAAI,CAACC,MAAL,GAAc,CAAd,GAAmBD,IAAI,CAACE,GAAL,CAASF,IAAI,IAAG;AAChC,QAAIA,IAAI,CAACG,UAAL,KAAoB,KAAxB,EAA8B;AAC1B,0BACI,uDACA;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQH,IAAI,CAACI,OAAb,CAFA,eAE6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAF7B,CADJ;AAMH,KAPD,MAQI;AACA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ;AAGH;AACJ,GAdmB,CAAnB,gBAcG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAfJ,CAvCJ,eAwDI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CAxDJ,CADJ;AA8DH,CAhEM","sourcesContent":["import React,{useContext} from 'react';\nimport {Ellipsis} from '../../assets/index';\nimport {GlobalContext} from '../../Context/GlobalState';\n\nexport const TodayTask=()=>{\n    const {task} = useContext(GlobalContext);\n    return(\n        <div>\n            <div className='today-task-header'>\n                <h3>Today's Tasks</h3>\n                <img src={Ellipsis} alt=\"\" width='6px' height='24px'/>\n            </div>\n            {/* <div className='today-task-complete'> */}\n            {task.length > 0 ? (task.map(task =>{\n                if (task.completion === true){\n                    return(\n                        <div className='today-task-complete'>\n                        <input type=\"checkbox\"/>\n                        <label>{task.content}</label><br/>\n                        </div>     \n                    )            \n                }\n                else{\n                    return(\n                            <div className='today-task-list'>\n                            <input type=\"checkbox\"/>\n                            <label>{task.content}</label><br/>\n                            </div>            \n                    )\n                }\n            })):<p>No task today</p>}\n                {/* {task.length > 0 ? (task.map(task =>{\n                    if (task.completion === true){\n                        return(\n                            <>\n                                <input type=\"checkbox\" checked/>\n                                <label style={{marginLeft:'1rem', color:'black'}}>{task.content}</label><br/>\n                            </>\n                        )\n                    }\n                })):<p>No items completed</p>} */}\n                {/* // <input type=\"checkbox\" name='1' checked/>\n                // <label for=\"1\" style={{marginLeft:'1rem', color:'black'}}>Clean the bedroom-top to bottom</label><br/>\n                // <input type=\"checkbox\" name='1' checked/>\n                // <label for=\"1\" style={{marginLeft:'1rem', color:'black'}}>Code review and team meeting</label><br/> */}\n            {/* </div> */}\n            <div className='today-task-list'>\n            {task.length > 0 ? (task.map(task =>{\n                if (task.completion === false){\n                    return(\n                        <>\n                        <input type=\"checkbox\"/>\n                        <label>{task.content}</label><br/>\n                        </>     \n                    )            \n                }\n                else{\n                    return(\n                        <p>No task left</p>\n                    )\n                }\n            })):<p>No task today</p>}\n            </div>\n            <div className=\"today-task-button\">\n                <button>+ Add a new task</button>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}