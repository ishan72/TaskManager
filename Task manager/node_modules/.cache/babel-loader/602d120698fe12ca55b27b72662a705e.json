{"ast":null,"code":"var _jsxFileName = \"/home/ishan/project/TaskManager/Task manager/src/Routers/ProtectedRoute.js\";\n// import React from 'react';\n// import {Redirect, Route} from 'react-router-dom';\n// export const Protected=({component: Cmp, ...rest})=>{\n//     return(\n//         <Route {...rest} render ={\n//             props => (localStorage.getItem('login') ? <Cmp {...rest} {...props} /> : <Redirect to ='/login'/>)\n//         }\n//         />\n//     )\n// }\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../Context/AuthContext';\nexport const Protected = ({\n  component: Cmp,\n  ...rest\n}) => {\n  const {\n    authenticated,\n    loadingAuthState\n  } = useContext(AuthContext);\n\n  if (loadingAuthState) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, \"Loading...\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: routeprops => authenticated ? /*#__PURE__*/React.createElement(Cmp, Object.assign({}, routeprops, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/sign-up',\n        state: {\n          prevPath: rest.path\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/home/ishan/project/TaskManager/Task manager/src/Routers/ProtectedRoute.js"],"names":["React","useContext","Route","Redirect","AuthContext","Protected","component","Cmp","rest","authenticated","loadingAuthState","routeprops","pathname","state","prevPath","path"],"mappings":";AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AAEA,OAAO,MAAMC,SAAS,GAAC,CAAC;AAACC,EAAAA,SAAS,EAAEC,GAAZ;AAAiB,KAAGC;AAApB,CAAD,KAA6B;AAChD,QAAM;AAACC,IAAAA,aAAD;AAAgBC,IAAAA;AAAhB,MAAoCT,UAAU,CAACG,WAAD,CAApD;;AAEA,MAAGM,gBAAH,EAAoB;AAChB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ;AAKH;;AACD,sBACI,oBAAC,KAAD,oBAAWF,IAAX;AAAiB,IAAA,MAAM,EAAEG,UAAU,IAC/BF,aAAa,gBACT,oBAAC,GAAD,oBAASE,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADS,gBAEV,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAACC,QAAAA,QAAQ,EAAC,UAAV;AAAsBC,QAAAA,KAAK,EAAC;AAACC,UAAAA,QAAQ,EAAEN,IAAI,CAACO;AAAhB;AAA5B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AASH,CAnBM","sourcesContent":["// import React from 'react';\n// import {Redirect, Route} from 'react-router-dom';\n\n// export const Protected=({component: Cmp, ...rest})=>{\n//     return(\n//         <Route {...rest} render ={\n//             props => (localStorage.getItem('login') ? <Cmp {...rest} {...props} /> : <Redirect to ='/login'/>)\n//         }\n//         />\n//     )\n// }\n\nimport React,{useContext} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {AuthContext} from '../Context/AuthContext';\n\nexport const Protected=({component: Cmp, ...rest})=>{\n    const {authenticated, loadingAuthState} = useContext(AuthContext);\n\n    if(loadingAuthState){\n        return(\n            <div>\n                <h1>Loading...</h1>\n            </div>\n        )\n    }\n    return(\n        <Route {...rest} render={routeprops =>\n            authenticated ?(\n                <Cmp {...routeprops} />\n            ):(<Redirect to={{pathname:'/sign-up', state:{prevPath: rest.path}}}/>\n            )\n        }\n        />\n    );\n}"]},"metadata":{},"sourceType":"module"}