{"ast":null,"code":"var _jsxFileName = \"/home/ishan/project/TaskManager/Task manager/src/components/Dashboard-main/todayTask.js\";\nimport React, { useContext, useState } from 'react';\nimport { Ellipsis } from '../../assets/index';\nimport { GlobalContext } from '../../Context/GlobalState';\nimport { v4 as uuid } from 'uuid';\nimport { TaskIncomplete } from './taskIncomplete';\nimport { TaskComplete } from './taskComplete';\nexport const TodayTask = () => {\n  // const [content, setContent] = useState('');\n  const {\n    tasks,\n    addTask\n  } = useContext(GlobalContext); // const onSubmit = (e) => {\n  //     e.preventDefault();\n  //     const newTask = {\n  //         id: uuid(),\n  //         content,\n  //         completion: false\n  //     }\n  //     addTask(newTask);\n  // }\n  // const onChange = (e) => {\n  //     setContent(e.target.value);\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"today-task-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Today's Tasks\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: Ellipsis,\n    alt: \"\",\n    width: \"6px\",\n    height: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"today-task-complete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, tasks.length > 0 ? tasks.map(task => {\n    if (task.completion === true) {\n      return /*#__PURE__*/React.createElement(TaskComplete, {\n        key: task.id,\n        task: task,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }\n      });\n    }\n\n    return null;\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }\n  }, \"No task today\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"today-task-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, tasks.length > 0 ? tasks.map(task => {\n    if (task.completion === false) {\n      return /*#__PURE__*/React.createElement(TaskIncomplete, {\n        key: task.id,\n        task: task,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }\n      });\n    }\n\n    return null;\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 24\n    }\n  }, \"No task today\")));\n};","map":{"version":3,"sources":["/home/ishan/project/TaskManager/Task manager/src/components/Dashboard-main/todayTask.js"],"names":["React","useContext","useState","Ellipsis","GlobalContext","v4","uuid","TaskIncomplete","TaskComplete","TodayTask","tasks","addTask","length","map","task","completion","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBV,UAAU,CAACG,aAAD,CAArC,CAF2B,CAG3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAK,IAAA,GAAG,EAAED,QAAV;AAAoB,IAAA,GAAG,EAAC,EAAxB;AAA2B,IAAA,KAAK,EAAC,KAAjC;AAAuC,IAAA,MAAM,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKO,KAAK,CAACE,MAAN,GAAe,CAAf,GAAoBF,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAI;AACnC,QAAIA,IAAI,CAACC,UAAL,KAAoB,IAAxB,EAA8B;AAC1B,0BACI,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAED,IAAI,CAACE,EAAxB;AAA4B,QAAA,IAAI,EAAEF,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;AACD,WAAO,IAAP;AACH,GAPoB,CAApB,gBAOK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARV,CALJ,eAeI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KAAK,CAACE,MAAN,GAAe,CAAf,GAAoBF,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAI;AACnC,QAAIA,IAAI,CAACC,UAAL,KAAoB,KAAxB,EAA+B;AAC3B,0BACI,oBAAC,cAAD;AAAgB,QAAA,GAAG,EAAED,IAAI,CAACE,EAA1B;AAA8B,QAAA,IAAI,EAAEF,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;AACD,WAAO,IAAP;AACH,GAPoB,CAApB,gBAOM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARX,CAfJ,CADJ;AAkCH,CAjDM","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Ellipsis } from '../../assets/index';\nimport { GlobalContext } from '../../Context/GlobalState';\nimport { v4 as uuid } from 'uuid';\nimport { TaskIncomplete } from './taskIncomplete';\nimport { TaskComplete } from './taskComplete';\n\nexport const TodayTask = () => {\n    // const [content, setContent] = useState('');\n    const { tasks, addTask } = useContext(GlobalContext);\n    // const onSubmit = (e) => {\n    //     e.preventDefault();\n    //     const newTask = {\n    //         id: uuid(),\n    //         content,\n    //         completion: false\n    //     }\n    //     addTask(newTask);\n    // }\n    // const onChange = (e) => {\n    //     setContent(e.target.value);\n    // }\n    return (\n        <div>\n            <div className='today-task-header'>\n                <h3>Today's Tasks</h3>\n                <img src={Ellipsis} alt=\"\" width='6px' height='24px' />\n            </div>\n            <div className='today-task-complete'>\n                {tasks.length > 0 ? (tasks.map(task => {\n                    if (task.completion === true) {\n                        return (\n                            <TaskComplete key={task.id} task={task}/>\n                        )\n                    }\n                    return null;\n                })) : <p>No task today</p>}\n            </div>\n            <div className='today-task-list'>\n                {tasks.length > 0 ? (tasks.map(task => {\n                    if (task.completion === false) {\n                        return (\n                            <TaskIncomplete key={task.id} task={task} />\n                        )\n                    }\n                    return null;\n                })) : (<p>No task today</p>)}\n            </div>\n            {/* <div className=\"today-task-add\">\n                <form onSubmit={onSubmit}>\n                    <input type=\"text\" value={content} onChange={onChange} placeholder=\"+ Add a new task\" />\n                    <button type=\"submit\">Submit</button>\n                </form>\n            </div> */}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}